{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"blocking","outputs":[{"internalType":"address[]","name":"_signers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_slot","type":"uint256"}],"name":"getQueue","outputs":[{"internalType":"bytes32[]","name":"_keys","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSigners","outputs":[{"internalType":"address[]","name":"_signers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"name":"prep","outputs":[{"internalType":"enum MPECDH.Step","name":"_status","type":"uint8"},{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"processed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"queues","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reconstruct","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"signers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"name":"source","outputs":[{"internalType":"uint256","name":"_slot","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"step","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_sourceSlot","type":"uint256"}],"name":"target","outputs":[{"internalType":"uint256","name":"_slot","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"MPECDH facilitates multi-party ECDH.","kind":"dev","methods":{"blocking()":{"details":"Lists all signers that have intermediary key contributions pending for the current round.","returns":{"_signers":"Array of signers"}},"constructor":{"details":"MPECDH ctor.","params":{"_master":"Master address - usually a Safe."}},"getQueue(uint256)":{"details":"Gets an internal queue.","params":{"_slot":"Signer slot"},"returns":{"_keys":"Array of intermediate keys"}},"getSigners()":{"details":"Gets the stored list of master's signers.","returns":{"_signers":"Array of signers"}},"prep(address)":{"details":"Iterates all intermediate keys to process. Step.End status 0 means there are no more steps for given signer.","params":{"_signer":"Signer address"},"returns":{"_status":",_key"}},"reconstruct()":{"details":"Resets the signer set to the master's current one. reconstruct() must be called whenever a master's signer set has changed."},"source(address)":{"details":"Gets the signer's abstract slot. A type(uint256).max return value indicates that the msg.sender is not part of the stored signer set.","params":{"_signer":"Signer address"},"returns":{"_slot":"Signer slot"}},"step(bytes32)":{"details":"Submits an intermediate key.","params":{"_key":"New key"}},"target(uint256)":{"details":"Gets the next signer's slot doing round-robin. A type(uint256).max return value indicates that _sourceSlot is not among the stored signer set.","params":{"_sourceSlot":"Source slot"},"returns":{"_slot":"Neighbor slot"}}},"stateVariables":{"master":{"details":"Master - usually a Safe."},"processed":{"details":"Processed counter per signer."},"queues":{"details":"Signers' key queues mapping from slot to intermediate keys."},"signers":{"details":"Copy of the Safe's signers that serves as slot base."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/MPECDH.sol":"MPECDH"},"evmVersion":"cancun","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"src/MPECDH.sol":{"keccak256":"0xb74bbf0c50e1923c6003aa30d9b69b2cfc1af16778d0fa650e54561d5600e5c9","license":"MIT","urls":["bzz-raw://4ff494d8bdcc60a3f92a8f95d3bd5d3895c1d6104a306e4c76da5023504aaf96","dweb:/ipfs/QmWGrc7sSuyaRjnEM4uToKysoFPAxRSBhF96PQp4dfXF7J"]}},"version":1}